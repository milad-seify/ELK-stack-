input {
        
        beats {
                type => "beats"
                port => 5044
        }
 
        udp {
		type => "syslog"
                port => 5045
 		codec => "json"                                                                          

       }

}

filter {

  if "access" in [type] {
    grok { 
      match => { "message" => '%{IP:client} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] "%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}" %{NUMBER:response} %{NUMBER:bytes} "%{DATA:referrer}" "%{DATA:user_agent}"' } 
      remove_field => "message"
    } 


  } 
 
 else if "error" in [type] { 
    grok { 
      match => { "message" => '%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME} \[%{LOGLEVEL:level}\] %{INT:process_id}#%{INT:thread_id}: \*(%{INT:connection_id})? %{GREEDYDATA:description}' } 
      remove_field => "message"
    } 
  } 



}


#for using pipeline options
#output { pipeline { send_to => ["es-out", "file-out"] } }

output {
        
if [type] == "syslog" {
        opensearch {
                hosts => ["https://opensearch-node1:9200", "https://opensearch-node2:9200", "https://opensearch-node3:9200"]
                ssl => true
                ssl_certificate_verification => false
                user => admin
                password => admin
                index => "%{type}-log-%{+YYYY.MM.dd}"
        } 

}

 else {

        opensearch {
                hosts => ["https://opensearch-node1:9200", "https://opensearch-node2:9200", "https://opensearch-node3:9200"]
                ssl => true
                ssl_certificate_verification => false
                user => admin
                password => admin
		index => "%{[@metadata][beat]}-%{[host][hostname]}-%{+YYYY.MM.dd}"
        }  
}  

}

